r(x,y) - capacitatea reziduala pe arcul (x,y)
c(x,y) - capacitatea pe arcul (x,y)
f(x,y) - fluxul pe arcul (x,y)
s - nod sursa in reteaua
t - nod stoc in retea
DMF = drum de marire a fluxului (drum intre nodul sursa si nodul stoc in reteaua reziduala)
r(x,y) = c(x,y) - f(x,y) + f(y,x) =>  c(x,y) - r(x,y) =  f(x,y) - f(y,x)
daca c(x,y) - r(x,y) >= 0 => f(x,y) = c(x,y) - r(x,y) si f(y,x) = 0
daca c(x,y) - r(x,y) < 0 => f(x,y) = 0 si f(y,x) = |c(x,y) - r(x,y)|

Program Ford-Fulkerson
Begin
	fie f un flux admisibil initial
	construim reteaua reziduala G_tilda(f)
	While G_tilda(f) contine un DMF
	Begin
		identuficam DMF in G_tilda(f) si il notam D_tilda
		r(D_tilda) = min{r(x,y)/(x,y) apartine D_tilda} //capacitatea reziduala a drumului de marire a fluxului
		se aplica marirea de flux pe D_tilda
		se actualizeaza reteaua reziduala G_tilda(f)
	End
End

Initializari:
 - reteaua reziduala este identica cu reteaua data, doar ca pe arce vom avea r(x,y) = c(x,y)
Iter 1:
D_tilda = {1,2,4}
r(D_tilda) = min{r(1,2), r(2,4)} = 3
//se aplica marirea de flux:
//pt arcele directe
r(1,2) = r(1,2) - r(D_tilda) = 4 - 3 = 1
r(2,4) = r(2,4) - r(D_tilda) = 3 - 3 = 0
//pt arcele inverse
r(2,1) = r(2,1) + r(D_tilda) = 0 + 3 = 3
r(4,2) = r(4,2) + r(D_tilda) = 0 + 3 = 3

Iter 2:
D_tilda = {1,2,3,4}
r(D_tilda) = 1
//se aplica marirea de flux:
//pt arcele directe
r(1,2) = 0
r(2,3) = 0
r(3,4) = 5
//pt arcele inverse
r(2,1) = 4
r(3,2) = 1
r(4,3) = 1

Iter 3:
D_tilda = {1,3,4}
r(D_tilda) = 5
//se aplica marirea de flux:
//pt arcele directe
r(1,3) = 0
r(3,4) = 0
//pt arcele inverse
r(3,1) = 5
r(4,3) = 6

Calcul fluxuri:
(1,2) -> c(1,2) - r(1,2) = 4 - 0 = 4 > 0 => f(1,2) = 4; f(2,1) = 0
(1,3) -> c(1,3) - r(1,3) = 5- 0 = 5 > 0 => f(1,3) = 5; f(3,1) = 0
(2,3) -> ...=>f(2,3) = 1; f(3,2) = 0;
(2,4) -> ... => f(2,4) = 3; f(4,2) = 0;
(3,4) -> ... => f(3,4) = 6; f(4,3) = 0;

Taetura maxima = X={1}, X_barat = {2,3,4}
fluxul maxim  = valoarea fluxului pe taetura [X,X_barat] = 9 (f(1,2)+f(1,3))

Flux de cost minim (alg de eliminare a circuitelor negative):
b(x,y) - costul de transport a unei unitati de flux pe arcul (x,y)
atunci cand apar arce in sens opus prin prelucrarea retelei reziduale, costurile acelor respective vor fi -b(x,y)

Program ElimCircuiteNegative
Begin
	fie f un flux admisibil initial
	construim reteaua reziduala G_tilda(f)
	While G_tilda(f) contine un circuit de cost negativ // se foloseste Bellman-Ford
	Begin
		identuficam circuitul de cost negativ in G_tilda(f) si il notam H_tilda
		r(H_tilda) = min{r(x,y)/(x,y) apartine H_tilda} //capacitatea reziduala a circuitului H_tilda
		se aplica marirea de flux pe H_tilda
		se actualizeaza reteaua reziduala G_tilda(f)
	End
End
